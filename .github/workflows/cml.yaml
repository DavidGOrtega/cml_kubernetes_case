on:
  workflow_dispatch:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
    launch:
        runs-on: [ubuntu-latest]
        steps:
          - name: Launch runner
            shell: bash
            env:
              GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
              KUBERNETES_CONFIGURATION: ${{ secrets.KUBERNETES_CONFIGURATION }}
              GITHUB_TOKEN: ${{ secrets.REPOSITORY_SECRET }}
            run: |
              # Configure the Google Cloud service account; only required for Google Kubernetes Engine users.
              export GOOGLE_APPLICATION_CREDENTIALS="$(realpath service-account-key.json)"
              echo "$GOOGLE_SERVICE_ACCOUNT" > "$GOOGLE_APPLICATION_CREDENTIALS"

              # Alias the kubectl command so it reads the configuration from an environment variable.
              shopt -s expand_aliases && alias kubectl='kubectl --kubeconfig <(echo "$KUBERNETES_CONFIGURATION")'

              # Declare a separate namespace for the jobs.
              kubectl apply --filename - <<-END
                apiVersion: v1
                kind: Namespace
                metadata:
                  name: cml
              END

              # Launch a one-time job with the CML container image to perform all the heavy lifting on Kubernetes.
              kubectl --namespace=cml apply --filename - <<-END
                apiVersion: batch/v1
                kind: Job
                metadata:
                  name: "cml-$GITHUB_SHA"
                  namespace: cml
                spec:
                  ttlSecondsAfterFinished: 120
                  template:
                    spec:
                      containers:
                      - name: "cml-$GITHUB_SHA"
                        image: dvcorg/cml-py3
                        env:
                        - name: GITHUB_TOKEN
                          value: "$GITHUB_TOKEN"
                        - name: RUNNER_REPO
                          value: "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY"
                        resources:
                          limits:
                            nvidia.com/gpu: 1
                      restartPolicy: Never
              END

              # Wait (one week at most) for the runner job to be ready.
              POD_NAME="$(kubectl get pods --namespace=cml --selector job-name="cml-$GITHUB_SHA" \
                 --output=jsonpath="{.items[*].metadata.name}")"


              # Wait (one week at most) for the pod to complete or fail.
              kubectl --namespace=cml wait --timeout=-1s --for=condition=ready "pod/$POD_NAME" & ready=$!
              kubectl --namespace=cml wait --timeout=-1s --for=condition=failed "pod/$POD_NAME" & failed=$!
              wait -n $ready $failed

              # Print the execution logs for the pod.
              kubectl --namespace=cml logs "pod/$POD_NAME"

              # Exit cleanly if the job didn't fail nor timeout.
              kill -0 $ready &>/dev/null &&
              ! kill -0 $failed &>/dev/null


    train:
        needs: launch
        runs-on: [self-hosted, cml]
        steps:
          - uses: actions/checkout@v2
          - name: Run job
            env:
              GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            run: |
              apt-get update -y
              apt-get install python3-dev -y
              apt install imagemagick -y
              pip install -r requirements.txt

              # DVC reproduce neural style transfer training
              dvc repro

              # Compare master and workspace image results
              git fetch --prune
              git show origin/master:final_owl.png > master_owl.png
              convert +append final_owl.png master_owl.png out.png
              convert out.png -resize 75%  out_shrink.png
              echo "# Style transfer" >> report.md
              echo "### Workspace vs. Master" >> report.md
              cml-publish out_shrink.png --md >> report.md

              # Report training parameters
              echo "## Training parameter diffs" >> report.md
              dvc params diff master --show-md >> report.md

              # Report GPU details
              echo "## GPU info" >> report.md
              cat gpu_info.txt >> report.md

              cml-send-comment report.md

    cleanup:
        needs: train
        runs-on: [ubuntu-latest]
        steps:
          - name: Cleanup runner
            shell: bash
            env:
              GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
              KUBERNETES_CONFIGURATION: ${{ secrets.KUBERNETES_CONFIGURATION }}
              GITHUB_TOKEN: ${{ secrets.REPOSITORY_SECRET }}
            run: |
              # Configure the Google Cloud service account; only required for Google Kubernetes Engine users.
              export GOOGLE_APPLICATION_CREDENTIALS="$(realpath service-account-key.json)"
              echo "$GOOGLE_SERVICE_ACCOUNT" > "$GOOGLE_APPLICATION_CREDENTIALS"

              # Alias the kubectl command so it reads the configuration from an environment variable.
              shopt -s expand_aliases && alias kubectl='kubectl --kubeconfig <(echo "$KUBERNETES_CONFIGURATION")'

              # Wait (one week at most) for the job to complete or fail.
              kubectl --namespace=cml wait --timeout=-1s --for=condition=complete "job/cml-$GITHUB_SHA" & complete=$!
              kubectl --namespace=cml wait --timeout=-1s --for=condition=failed "job/cml-$GITHUB_SHA" & failed=$!
              wait -n $complete $failed

              # Print the execution logs for the job.
              kubectl --namespace=cml logs "job/cml-$GITHUB_SHA"

              # Exit cleanly if the job didn't fail nor timeout.
              kill -0 $complete &>/dev/null &&
              ! kill -0 $failed &>/dev/null
